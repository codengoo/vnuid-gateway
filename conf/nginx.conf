worker_processes  1;
# user nghia;

events {}

http {
    lua_package_path "/usr/local/share/lua/5.1/?.lua;;";
    limit_req_zone $binary_remote_addr zone=one:10m rate=100r/s;

    upstream vnuid_identity {
        server vnuid_identity:4444;
        # server host.docker.internal:4444;
    }

    upstream vnuid_management {
        server host.docker.internal:3000;
    }

    map $request_method $cors_preflight {
        default 0;
        OPTIONS 1;
    }

    server {
        listen 80;

        set $CORS_ORIGIN "http://localhost:4000";
        set $CORS_METHODS "GET, POST, OPTIONS, PUT, DELETE";
        set $CORS_HEADERS "Content-Type, Authorization";

        location ~* ^/(auth|nfc|user|manage|checkin|admin|subject|search) {

            if ($cors_preflight) {
                add_header 'Access-Control-Allow-Origin' $CORS_ORIGIN always;
                add_header 'Access-Control-Allow-Methods' $CORS_METHODS always;
                add_header 'Access-Control-Allow-Headers' $CORS_HEADERS always;
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Length' 0;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                return 204;
            }

            add_header 'Access-Control-Allow-Origin' $CORS_ORIGIN always;
            add_header 'Access-Control-Allow-Methods' $CORS_METHODS always;
            add_header 'Access-Control-Allow-Headers' $CORS_HEADERS always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;

            # Identity routes
            if ($uri ~ ^/(auth|nfc|user|manage)) {
                proxy_pass http://vnuid_identity$request_uri;
            }

            # Management routes (with JWT)
            if ($uri ~ ^/(checkin|admin|subject|search)) {
                access_by_lua_file /usr/local/openresty/nginx/lua/jwt.lua;
                proxy_pass http://vnuid_management$request_uri;
            }
        }
    }
}
